// <auto-generated />
using Cinema_DB.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cinema_DB.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230802185455_initial Migration After Win Update")]
    partial class initialMigrationAfterWinUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ActorMovie", b =>
                {
                    b.Property<long>("ActorsId")
                        .HasColumnType("bigint");

                    b.Property<long>("MoviesId")
                        .HasColumnType("bigint");

                    b.HasKey("ActorsId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("ActorMovie");
                });

            modelBuilder.Entity("Cinema_DB.Data.Models.Actor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Robert De Niro"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Leonardo DiCaprio"
                        });
                });

            modelBuilder.Entity("Cinema_DB.Data.Models.Director", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Martin Scorsese"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Francis Ford Coppola"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Quentin Tarantino"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "Stanley Kubrick"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "Christopher Nolan"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "Alfred Hitchcock"
                        });
                });

            modelBuilder.Entity("Cinema_DB.Data.Models.Movie", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("DirectorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DirectorId = 2L,
                            Name = "The Godfather"
                        },
                        new
                        {
                            Id = 2L,
                            DirectorId = 2L,
                            Name = "The Godfather Part II"
                        },
                        new
                        {
                            Id = 3L,
                            DirectorId = 2L,
                            Name = "The Godfather Part III"
                        },
                        new
                        {
                            Id = 4L,
                            DirectorId = 1L,
                            Name = "Raging Bull"
                        },
                        new
                        {
                            Id = 5L,
                            DirectorId = 1L,
                            Name = "Taxi Driver"
                        },
                        new
                        {
                            Id = 6L,
                            DirectorId = 1L,
                            Name = "Goodfellas"
                        },
                        new
                        {
                            Id = 7L,
                            DirectorId = 3L,
                            Name = "Django Unchained"
                        },
                        new
                        {
                            Id = 8L,
                            DirectorId = 3L,
                            Name = "Pulp Fiction"
                        },
                        new
                        {
                            Id = 9L,
                            DirectorId = 1L,
                            Name = "Taxi Driver"
                        },
                        new
                        {
                            Id = 10L,
                            DirectorId = 5L,
                            Name = "Interstellar"
                        });
                });

            modelBuilder.Entity("ActorMovie", b =>
                {
                    b.HasOne("Cinema_DB.Data.Models.Actor", null)
                        .WithMany()
                        .HasForeignKey("ActorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cinema_DB.Data.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cinema_DB.Data.Models.Movie", b =>
                {
                    b.HasOne("Cinema_DB.Data.Models.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");
                });

            modelBuilder.Entity("Cinema_DB.Data.Models.Director", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
